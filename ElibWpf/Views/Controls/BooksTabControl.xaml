<UserControl
    x:Class="ElibWpf.Views.Controls.BooksTabControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Components="clr-namespace:ElibWpf.CustomComponents"
    xmlns:ControlViewModels="clr-namespace:ElibWpf.ViewModels.Controls"
    xmlns:ControlViews="clr-namespace:ElibWpf.Views.Controls"
    xmlns:Converters="clr-namespace:ElibWpf.Converters"
    xmlns:CustomAnimation="clr-namespace:ElibWpf.CustomAnimations"
    xmlns:MetroControls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:WindowViewModels="clr-namespace:ElibWpf.ViewModels.Windows"
    xmlns:WindowViews="clr-namespace:ElibWpf.Views.Windows"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <Converters:ImageConverter x:Key="ImageConverter" />
                    <Converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    <Converters:BoolToInverseVisibilityConverter x:Key="BooleanToInverseVisibilityConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style
                x:Key="ListBoxItemContainerStyle"
                BasedOn="{StaticResource MetroListBoxItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="{StaticResource LighterBackgroundColorBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true" />
                            <Condition Property="Selector.IsSelectionActive" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#999" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="ListBoxButtons"
                BasedOn="{StaticResource MetroListBox}"
                TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{StaticResource LighterBackgroundColorBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemContainerStyle}" />
            </Style>

            <Style x:Key="FlatButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Background" Value="{StaticResource LighterBackgroundColorBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="42" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <StackPanel
                                x:Name="Canvas"
                                Background="{StaticResource LighterBackgroundColorBrush}"
                                Orientation="Horizontal">
                                <ContentPresenter
                                    x:Name="TheContentRadioFlat"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Canvas" Property="Background" Value="#434343" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Canvas" Property="Background" Value="#222222" />
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="Canvas" Property="Background" Value="#272727" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="270" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border
            Grid.Column="0"
            Panel.ZIndex="10"
            BorderThickness="0">
            <Grid Background="{StaticResource LighterBackgroundColorBrush}">
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Button.Click" SourceName="SearchOptionsButton">
                        <BeginStoryboard>
                            <Storyboard>
                                <CustomAnimation:GridLengthAnimation
                                    x:Name="SearchOptionsHeightAnimation"
                                    Storyboard.TargetName="SearchContentRow"
                                    Storyboard.TargetProperty="Height"
                                    From="60"
                                    To="60"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="SearchContentRow" Height="60" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Background="{StaticResource AccentColorBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="90" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Components:TextBoxWithSymbol
                            Grid.Column="0"
                            Width="220"
                            Height="30"
                            Margin="10,0,0,0"
                            Background="Transparent"
                            EnterCommand="{Binding SearchCommand}"
                            FontSize="14"
                            FontWeight="Medium"
                            Foreground="GhostWhite"
                            IconMargin="5,10,0,0"
                            IconName="{x:Static iconPacks:PackIconFontAwesomeKind.SearchSolid}"
                            IconSize="12"
                            TextboxPadding="17,0,0,0"
                            WatermarkText="Search..." />
                        <Components:SymbolButton
                            x:Name="SearchOptionsButton"
                            Grid.Column="1"
                            Width="30"
                            Height="30"
                            Background="Transparent"
                            Click="SearchOptionsButton_Click"
                            Foreground="GhostWhite"
                            Icon="{x:Static iconPacks:PackIconFontAwesomeKind.ChevronDownSolid}"
                            IconSize="11"
                            RenderTransformOrigin="0.5, 0.5">
                            <Components:SymbolButton.RenderTransform>
                                <RotateTransform x:Name="SearchOptionsButtonTransform" Angle="0" />
                            </Components:SymbolButton.RenderTransform>
                            <Button.ToolTip>
                                <ToolTip>
                                    Show search options
                                </ToolTip>
                            </Button.ToolTip>
                            <Components:SymbolButton.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                x:Name="AngleDoubleAnimation"
                                                Storyboard.TargetName="SearchOptionsButtonTransform"
                                                Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                To="-180"
                                                Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Components:SymbolButton.Triggers>
                        </Components:SymbolButton>
                    </StackPanel>
                    <StackPanel
                        x:Name="SearchOptions"
                        Grid.Row="1"
                        Orientation="Vertical">
                        <CheckBox
                            Margin="20,0,0,0"
                            Command="{Binding SearchCheckboxChangedCommand}"
                            Focusable="False"
                            FontWeight="Medium"
                            Foreground="GhostWhite"
                            IsChecked="{Binding SearchOptions.SearchByName, UpdateSourceTrigger=PropertyChanged}">
                            Search by title
                        </CheckBox>
                        <CheckBox
                            Margin="20,10,0,0"
                            Command="{Binding SearchCheckboxChangedCommand}"
                            Focusable="False"
                            FontWeight="Medium"
                            Foreground="GhostWhite"
                            IsChecked="{Binding SearchOptions.SearchByAuthor, UpdateSourceTrigger=PropertyChanged}">
                            Search by author
                        </CheckBox>
                        <CheckBox
                            Margin="20,10,0,0"
                            Command="{Binding SearchCheckboxChangedCommand}"
                            Focusable="False"
                            FontWeight="Medium"
                            Foreground="GhostWhite"
                            IsChecked="{Binding SearchOptions.SearchBySeries, UpdateSourceTrigger=PropertyChanged}">
                            Search by series
                        </CheckBox>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Margin="10,15,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ListBox
                        Grid.Row="0"
                        Grid.Column="0"
                        VerticalAlignment="Top"
                        VerticalContentAlignment="Top"
                        Background="{StaticResource LighterBackgroundColorBrush}"
                        ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                        ItemsSource="{Binding MainPaneItems}"
                        SelectedItem="{Binding SelectedMainPaneItem, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding PaneSelectionChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <RadioButton
                                    Background="Aqua"
                                    GroupName="PaneSelect"
                                    IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                    Style="{StaticResource FlatButton}">
                                    <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                                        <iconPacks:PackIconControl
                                            Width="15"
                                            Height="15"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="White"
                                            Kind="{Binding Icon}" />
                                        <TextBlock
                                            Margin="10,0,0,2"
                                            VerticalAlignment="Center"
                                            FontSize="16"
                                            Text="{Binding PaneCaption}" />
                                    </StackPanel>
                                </RadioButton>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Foreground="{StaticResource AccentColorBrush}"
                        Text="Collections" />
                    <ScrollViewer
                        Grid.Row="2"
                        Grid.Column="0"
                        Background="Transparent"
                        VerticalScrollBarVisibility="Auto">
                        <Grid ScrollViewer.CanContentScroll="True">
                            <ListBox
                                Background="{StaticResource LighterBackgroundColorBrush}"
                                ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                                ItemsSource="{Binding Collections, Mode=OneWay}"
                                SelectedItem="{Binding SelectedCollection}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <RadioButton
                                            Height="28"
                                            GroupName="PaneSelect"
                                            IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                            Style="{StaticResource FlatButton}">
                                            <Grid>
                                                <TextBlock
                                                    Margin="10,0,0,0"
                                                    VerticalAlignment="Center"
                                                    FontSize="12"
                                                    Text="{Binding Tag}" />
                                            </Grid>
                                        </RadioButton>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </Border>

        <!--<GridSplitter
            Grid.Column="1"
            Width="3"
            HorizontalAlignment="Stretch" />-->

        <Grid Grid.Column="1" Background="GhostWhite">
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="0"
                Panel.ZIndex="20"
                Background="GhostWhite"
                BorderThickness="0">
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="5"
                        Direction="270"
                        Opacity="0.3" />
                </Border.Effect>
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border
                        Grid.Column="0"
                        BorderBrush="LightGray"
                        BorderThickness="0,0,1,0">
                        <Components:SymbolButton
                            Grid.Column="0"
                            Width="60"
                            Height="60"
                            Background="GhostWhite"
                            Command="{Binding BackCommand}"
                            Foreground="#484b4e"
                            Icon="{x:Static iconPacks:PackIconFontAwesomeKind.ChevronLeftSolid}"
                            IconSize="20"
                            IsEnabled="{Binding IsBackEnabled}">
                            <Components:ConditionalEventTrigger.Triggers>
                                <Components:ConditionalEventTriggerCollection>
                                    <Components:ConditionalEventTrigger Condition="{Binding IsBackEnabled}" RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    To="CornflowerBlue"
                                                    Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Components:ConditionalEventTrigger>
                                    <Components:ConditionalEventTrigger Condition="{Binding IsBackEnabled}" RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    To="#484b4e"
                                                    Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Components:ConditionalEventTrigger>
                                </Components:ConditionalEventTriggerCollection>
                            </Components:ConditionalEventTrigger.Triggers>
                        </Components:SymbolButton>
                    </Border>

                    <TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        FontSize="24"
                        Foreground="#484b4e"
                        Text="{Binding CurrentViewer.Caption}" />
                    <TextBlock
                        Grid.Column="4"
                        Margin="0,7,0,0"
                        VerticalAlignment="Center"
                        FontSize="14"
                        FontStyle="Italic"
                        Foreground="#484b4e">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0,0,0,0" Text="{Binding CurrentViewer.NumberOfBooks, Mode=OneWay}" />
                                <TextBlock Margin="0,0,0,0" Text=" books" />
                            </StackPanel>
                        </Grid>
                    </TextBlock>

                    <Components:SymbolButton
                        Grid.Column="6"
                        Width="30"
                        Height="30"
                        Command="{Binding RefreshCommand}"
                        Foreground="#484b4e"
                        Icon="{x:Static iconPacks:PackIconFontAwesomeKind.SyncAltSolid}"
                        IconSize="16"
                        Style="{StaticResource BlueHoverStyle}">
                        <Button.ToolTip>
                            <ToolTip>
                                Refresh
                            </ToolTip>
                        </Button.ToolTip>
                    </Components:SymbolButton>

                    <Grid Grid.Column="8" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="15" />
                        </Grid.ColumnDefinitions>

                        <Components:SymbolButton
                            Grid.Column="3"
                            Width="30"
                            Height="30"
                            Background="Transparent"
                            Command="{Binding AddBookCommand}"
                            Foreground="#484b4e"
                            Icon="{x:Static iconPacks:PackIconFontAwesomeKind.BookMedicalSolid}"
                            IconSize="24"
                            Style="{StaticResource BlueHoverStyle}"
                            Visibility="{Binding IsSelectedBooksViewer, Converter={StaticResource BooleanToInverseVisibilityConverter}}">
                            <Button.ToolTip>
                                <ToolTip>
                                    Add New Book
                                </ToolTip>
                            </Button.ToolTip>
                        </Components:SymbolButton>

                        <Components:SymbolButton
                            Grid.Column="3"
                            Width="30"
                            Height="30"
                            Background="Transparent"
                            Command="{Binding ExportSelectedBooksCommand}"
                            Foreground="#484b4e"
                            Icon="{x:Static iconPacks:PackIconFontAwesomeKind.DownloadSolid}"
                            IconSize="24"
                            Style="{StaticResource BlueHoverStyle}"
                            Visibility="{Binding IsSelectedBooksViewer, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button.ToolTip>
                                <ToolTip>
                                    Export selected books
                                </ToolTip>
                            </Button.ToolTip>
                        </Components:SymbolButton>
                    </Grid>
                </Grid>
            </Border>
            <ContentControl Grid.Row="1" Content="{Binding CurrentViewer}" />
        </Grid>
    </Grid>
</UserControl>