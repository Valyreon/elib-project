<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Components="clr-namespace:ElibWpf.CustomComponents"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:local="clr-namespace:ElibWpf.Resources">
    <Style
        x:Key="CustomDarkCheckbox"
        BasedOn="{StaticResource MahApps.Styles.CheckBox}"
        TargetType="{x:Type CheckBox}">
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundChecked" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed" Value="{DynamicResource AccentColorBrush}" />
    </Style>

    <Style
        x:Key="CustomLightCheckBox"
        BasedOn="{StaticResource MahApps.Styles.CheckBox}"
        TargetType="{x:Type CheckBox}">
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundChecked" Value="#444" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver" Value="#444" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed" Value="#444" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundChecked" Value="#f1f1f1" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundCheckedPressed" Value="#f1f1f1" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundCheckedMouseOver" Value="#f1f1f1" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUnchecked" Value="#f1f1f1" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUncheckedPressed" Value="#f1f1f1" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUncheckedMouseOver" Value="#f1f1f1" />
    </Style>

    <Style
        x:Key="LightDataGridCellModified"
        BasedOn="{StaticResource MahApps.Styles.DataGridCell}"
        TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#222" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="White" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="LightDataGridRowModified"
        BasedOn="{StaticResource MahApps.Styles.DataGridRow}"
        TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#f9f9f9" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlueHoverStyle" TargetType="Components:SymbolButton">
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="CornflowerBlue"
                            Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="Foreground.Color"
                            To="#484b4e"
                            Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse
                                    x:Name="Border"
                                    Fill="Transparent"
                                    Stroke="Gray"
                                    StrokeThickness="1" />
                                <Ellipse
                                    x:Name="CheckMark"
                                    Margin="4"
                                    Fill="CornflowerBlue" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Stroke" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Stroke" Value="Black" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="#3172e7" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Fill" Value="Transparent" />
                            <Setter TargetName="Border" Property="Stroke" Value="CornflowerBlue" />
                            <Setter Property="Foreground" Value="#80000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>