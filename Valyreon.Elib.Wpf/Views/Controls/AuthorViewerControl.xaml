<UserControl
    x:Class="Valyreon.Elib.Wpf.Views.Controls.AuthorViewerControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AuthorConverters="clr-namespace:Valyreon.Elib.Wpf.Converters.AuthorTileConverters"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:Components="clr-namespace:Valyreon.Elib.Wpf.CustomComponents"
    xmlns:Converters="clr-namespace:Valyreon.Elib.Wpf.Converters"
    xmlns:TileComponents="clr-namespace:Valyreon.Elib.Wpf.Themes.CustomComponents.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Loaded">
            <Behaviors:InvokeCommandAction Command="{Binding LoadCommand}" />
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary>
            <Converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Converters:BoolToInverseVisibilityConverter x:Key="BooleanToInverseVisibilityConverter" />
            <AuthorConverters:AuthorToBookCountStringConverter x:Key="AuthorToBookCountStringConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="16"
                Foreground="Gray"
                Text="There are no authors."
                Visibility="{Binding IsResultEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="0"
                Panel.ZIndex="20"
                Background="GhostWhite"
                BorderThickness="0">
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="5"
                        Direction="270"
                        Opacity="0.3" />
                </Border.Effect>
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border
                        Grid.Column="0"
                        BorderBrush="LightGray"
                        BorderThickness="0,0,1,0">
                        <Components:SymbolButton
                            Grid.Column="0"
                            Width="60"
                            Height="60"
                            Background="GhostWhite"
                            Command="{Binding BackCommand}"
                            Foreground="#484b4e"
                            Icon="{x:Static iconPacks:PackIconFontAwesomeKind.ChevronLeftSolid}"
                            IconSize="20"
                            IsEnabled="{Binding IsBackEnabled}">
                            <Components:ConditionalEventTrigger.Triggers>
                                <Components:ConditionalEventTriggerCollection>
                                    <Components:ConditionalEventTrigger Condition="{Binding IsBackEnabled}" RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    To="CornflowerBlue"
                                                    Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Components:ConditionalEventTrigger>
                                    <Components:ConditionalEventTrigger Condition="{Binding IsBackEnabled}" RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetProperty="Foreground.Color"
                                                    To="#484b4e"
                                                    Duration="0:0:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Components:ConditionalEventTrigger>
                                </Components:ConditionalEventTriggerCollection>
                            </Components:ConditionalEventTrigger.Triggers>
                        </Components:SymbolButton>
                    </Border>

                    <TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        FontSize="24"
                        Foreground="#484b4e"
                        Text="{Binding Caption}" />

                    <Grid Grid.Column="8" HorizontalAlignment="Right">
                        <Grid.CacheMode>
                            <BitmapCache
                                EnableClearType="True"
                                RenderAtScale="1"
                                SnapsToDevicePixels="False" />
                        </Grid.CacheMode>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="15" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </Grid>
            </Border>
            <ItemsControl
                Grid.Row="1"
                Margin="10"
                Padding="0,0,0,0"
                VerticalAlignment="Top"
                ItemsSource="{Binding Authors, Mode=OneWay, IsAsync=True}"
                ScrollViewer.CanContentScroll="True"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">
                <ItemsControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Menu item 1" />
                        <MenuItem Header="Menu item 2" />
                        <Separator />
                        <MenuItem Header="Menu item 3" />
                    </ContextMenu>
                </ItemsControl.ContextMenu>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TileComponents:AuthorTileControl
                            x:Name="authorTile"
                            AuthorBookCount="{Binding ., Converter={StaticResource AuthorToBookCountStringConverter}}"
                            AuthorName="{Binding Name}"
                            Command="{Binding DataContext.GoToAuthor, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                            Parameter="{Binding .}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.Template>
                    <ControlTemplate>
                        <Border
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Panel.Background}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                Padding="{TemplateBinding Control.Padding}"
                                FocusVisualStyle="{x:Null}"
                                Focusable="False"
                                VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ItemsControl.Template>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
        <Grid.CacheMode>
            <BitmapCache
                EnableClearType="True"
                RenderAtScale="1"
                SnapsToDevicePixels="False" />
        </Grid.CacheMode>
    </Grid>
</UserControl>
