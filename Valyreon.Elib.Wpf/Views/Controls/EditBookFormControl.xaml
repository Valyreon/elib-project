<UserControl
    x:Class="Valyreon.Elib.Wpf.Views.Controls.EditBookFormControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:BindingItems="clr-namespace:Valyreon.Elib.Wpf.BindingItems"
    xmlns:Components="clr-namespace:Valyreon.Elib.Wpf.CustomComponents"
    xmlns:Converters="clr-namespace:Valyreon.Elib.Wpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Valyreon.Elib.Wpf.Views.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Validation.ErrorTemplate="{x:Null}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Converters:ImageConverter x:Key="ImageConverter" />
        <Converters:StringToInverseVisibilityConverter x:Key="StringToVisibilityConverter" />
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Converters:BoolToInverseVisibilityConverter x:Key="BoolToInverseVisibilityConverter" />
        <Converters:BoolToInverseBoolConverter x:Key="BoolToInverseBoolConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210" />
            <ColumnDefinition Width="15" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="300" />
                <RowDefinition Height="5" />
                <RowDefinition Height="25" />
                <RowDefinition Height="15" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border
                Margin="0"
                HorizontalAlignment="Left"
                BorderBrush="LightGray"
                BorderThickness="1">
                <Image Margin="0" Source="{Binding Cover, Converter={StaticResource ImageConverter}, UpdateSourceTrigger=PropertyChanged}" />
            </Border>
            <Grid Grid.Row="4" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30px" />
                    <RowDefinition Height="30px" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" MaxWidth="210px" />
                </Grid.ColumnDefinitions>

                <CheckBox
                    Focusable="False"
                    IsChecked="{Binding IsReadCheck, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource CustomDarkCheckbox}" />
                <Label
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    FontSize="15">
                    Read
                </Label>

                <CheckBox
                    Grid.Row="1"
                    Focusable="False"
                    IsChecked="{Binding IsFavoriteCheck, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource CustomDarkCheckbox}" />
                <Label
                    Grid.Row="1"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    FontSize="15">
                    Favorite
                </Label>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    Height="25"
                    Command="{Binding ChangeCoverButtonCommand}"
                    FontSize="12">
                    CHANGE
                </Button>
                <Button
                    Grid.Column="2"
                    Height="25"
                    Command="{Binding RemoveCoverButtonCommand}"
                    FontSize="12">
                    CLEAR
                </Button>
            </Grid>
        </Grid>

        <Grid Grid.Column="2">
            <Grid.Resources>
                <BindingItems:BindingProxy x:Key="Proxy" Data="{Binding}" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="15" />
                <RowDefinition Height="230" />
            </Grid.RowDefinitions>
            <Components:ElibTextBox
                Grid.Row="0"
                Height="35"
                VerticalContentAlignment="Center"
                Background="Transparent"
                FontFamily="Segoe UI Semibold"
                FontSize="13"
                Placeholder="Title"
                Text="{Binding TitleFieldText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="350" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Components:ElibTextBox
                    Grid.Row="0"
                    Height="35"
                    Background="Transparent"
                    Cursor="Arrow"
                    Focusable="False"
                    FontFamily="Segoe UI Semibold"
                    IsReadOnly="True"
                    Placeholder="No series selected."
                    Text="{Binding Series.Name}" />
                <Button
                    x:Name="SeriesOptionsButton"
                    Grid.Column="2"
                    Height="25"
                    Focusable="False"
                    FontSize="12">
                    ADD
                    <Button.ContextMenu>
                        <ContextMenu x:Name="SeriesContextMenu">
                            <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.CreateNewSeriesCommand}" Header="New" />
                            <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ChooseExistingSeriesCommand}" Header="Existing" />
                        </ContextMenu>
                    </Button.ContextMenu>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="SeriesOptionsButton">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SeriesContextMenu" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Button
                    Grid.Column="4"
                    Height="25"
                    Command="{Binding ClearSeriesCommand}"
                    Focusable="False"
                    FontSize="12">
                    CLEAR
                </Button>
                <Components:ElibTextBox
                    Grid.Column="6"
                    Height="35"
                    Background="Transparent"
                    Focusable="{Binding IsSeriesSelected}"
                    FontFamily="Segoe UI Semibold"
                    FontSize="13"
                    IsEnabled="{Binding IsSeriesSelected}"
                    Placeholder="##"
                    PreviewTextInput="SeriesNumberField_PreviewTextInput"
                    Text="{Binding SeriesNumberFieldText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Visibility="{Binding IsSeriesSelected, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <Grid Grid.Row="2" Margin="0,10,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MaxWidth="300" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="AuthorsPart">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            FontSize="16"
                            Text="Authors:" />
                        <Button
                            x:Name="AuthorsOptionsButton"
                            Grid.Column="2"
                            Height="25"
                            FontSize="12">
                            ADD
                            <Button.ContextMenu>
                                <ContextMenu x:Name="AuthorsContextMenu">
                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewAuthorButtonCommand}" Header="New" />
                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.AddExistingAuthorButtonCommand}" Header="Existing" />
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click" SourceName="AuthorsOptionsButton">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AuthorsContextMenu" Storyboard.TargetProperty="(ContextMenu.IsOpen)">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <sys:Boolean>True</sys:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                    </Grid>
                    <ScrollViewer MaxHeight="122px" VerticalScrollBarVisibility="Auto">
                        <ItemsControl Margin="0,0,0,3" ItemsSource="{Binding AuthorsCollection}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid
                                        Height="26"
                                        MaxWidth="200"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="CloseButton"
                                                            Storyboard.TargetProperty="(Button.Opacity)"
                                                            To="1"
                                                            Duration="0:0:0.3" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="CloseButton"
                                                            Storyboard.TargetProperty="(Button.Opacity)"
                                                            To="0"
                                                            Duration="0:0:0.3" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Grid.Triggers>

                                        <TextBlock
                                            Grid.Column="0"
                                            Height="24"
                                            VerticalAlignment="Center"
                                            FontSize="14"
                                            Foreground="#bbb"
                                            Text="{Binding Name}" />
                                        <Components:SymbolButton
                                            x:Name="CloseButton"
                                            Grid.Column="1"
                                            Width="16"
                                            Height="16"
                                            HorizontalAlignment="Right"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.RemoveAuthorCommand}"
                                            CommandParameter="{Binding Id}"
                                            Foreground="#484b4e"
                                            Icon="{x:Static iconPacks:PackIconJamIconsKind.Close}"
                                            IconSize="12"
                                            Opacity="0"
                                            Style="{StaticResource BlueHoverStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" MaxHeight="200" />
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Column="1"
                    FontSize="16"
                    Text="Description:" />
                <Components:ElibTextBox
                    Grid.Row="1"
                    VerticalContentAlignment="Top"
                    AcceptsReturn="True"
                    Background="Transparent"
                    FontFamily="Segoe UI Semibold"
                    FontSize="13"
                    HorizontalScrollBarVisibility="Disabled"
                    Text="{Binding DescriptionFieldText}"
                    TextWrapping="Wrap"
                    VerticalScrollBarVisibility="Auto" />
            </Grid>
        </Grid>
    </Grid>

</UserControl>
