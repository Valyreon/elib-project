//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valyreon.Elib.Wpf.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class JavascriptCode {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal JavascriptCode() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ElibWpf.Resources.JavascriptCode", typeof(JavascriptCode).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @font-face {
        ///  font-family: &apos;CtxMenuFont&apos;;
        ///  font-style: normal;
        ///  font-weight: 300;
        ///  src: local(&apos;Segoe UI&apos;);
        ///}
        ///
        ////* Background that covers entire page when right clicking, invisible by default */
        ///#ctx-menu-background {
        ///  /* background-color: rgba(0, 0, 0, 0.1);  Tint entire page darker when context menu appears */
        ///  position: absolute;
        ///  top: 0;
        ///  left: 0;
        ///  width: 100%;
        ///  height: 100%;
        ///  z-index: 998;
        ///}
        ///
        ////* The Context Menu itself */
        ///.ctx-menu-wrapper {
        ///
        ///  background-color: rgb(250, 2 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CtxMenuCss {
            get {
                return ResourceManager.GetString("CtxMenuCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///* CtxMenu
        ///* Author: Nils Soderman &lt;contact@nilssoderman.com&gt;
        ///* Repo: https://github.com/nils-soderman/Javascript-contextMenu
        ///*/
        ///
        ///const ECtxMenuNames = {
        ///	menu: 			&quot;ctx-menu-wrapper&quot;,
        ///	item: 			&quot;ctx-menu-item&quot;,
        ///	seperator:		&quot;ctx-menu-seperator&quot;,
        ///	hasIcon: 		&quot;ctx-menu-hasIcon&quot;
        ///};
        ///
        ///
        ///class CtxMenuManagerClass {
        ///	constructor(){
        ///		this._currentMenuVisible = null;
        ///		this._ctxMenus = new Map();
        ///
        ///		document.addEventListener(&apos;contextmenu&apos;, this._eventOpenMenu.bind(this));
        ///
        ///		const scripts = do [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CtxMenuJS {
            get {
                return ResourceManager.GetString("CtxMenuJS", resourceCulture);
            }
        }
    }
}
