<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:BookTileConverters="clr-namespace:Valyreon.Elib.Wpf.Converters.BookTileConverters"
    xmlns:Components="clr-namespace:Valyreon.Elib.Wpf.CustomComponents"
    xmlns:Converters="clr-namespace:Valyreon.Elib.Wpf.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <Converters:ImageConverter x:Key="ImageConverter" />
            <Converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <BookTileConverters:StringToBoolConverter x:Key="StringToBoolConverter" />
            <Converters:StringToInverseVisibilityConverter x:Key="StringToInverseVisibilityConverter" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Components:TextLinkButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Components:TextLinkButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock
                            Width="{TemplateBinding Width}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Text}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Components:CheckboxButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Components:CheckboxButton}">
                    <Border
                        x:Name="Enveloper"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <Image
                                    x:Name="CheckImage"
                                    Width="{TemplateBinding IconSize}"
                                    Height="{TemplateBinding IconSize}"
                                    Margin="0,0,5,0"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Uniform">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Image.RenderTransform>
                                </Image>
                                <TextBlock
                                    x:Name="Label"
                                    Grid.Column="3"
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Foreground="#555"
                                    Text="{TemplateBinding Text}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="CheckImage" Property="Source" Value="{Binding Path=ImageChecked, RelativeSource={RelativeSource AncestorType={x:Type Components:CheckboxButton}}}" />
                                <Setter TargetName="Label" Property="Foreground" Value="WhiteSmoke" />
                                <Setter TargetName="Enveloper" Property="BorderBrush" Value="WhiteSmoke" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="CheckImage" Property="Source" Value="{Binding Path=ImageUnchecked, RelativeSource={RelativeSource AncestorType={x:Type Components:CheckboxButton}}}" />
                                <!--<Setter TargetName="CheckImage" Property="Width" Value="10" />
                                <Setter TargetName="CheckImage" Property="Height" Value="10" />-->
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Components:SelectedBannerCheck}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Components:SelectedBannerCheck}">
                    <Border
                        x:Name="Border"
                        Width="164"
                        Background="{DynamicResource AccentColorBrush}">
                        <TextBlock
                            x:Name="Label"
                            Margin="0,0,0,1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            FontSize="14"
                            Foreground="GhostWhite"
                            Text="{TemplateBinding Text}"
                            TextOptions.TextFormattingMode="Ideal" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Components:ElibTextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="BorderBrush" Value="#aaa" />
        <Setter Property="CaretBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="PlaceholderForeground" Value="DimGray" />
        <Setter Property="PlaceholderForegroundFocused" Value="LightGray" />
        <Setter Property="Background" Value="White" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        Name="Border"
                        Padding="3,0"
                        Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Grid>
                            <TextBlock
                                x:Name="placeholderText"
                                Padding="3,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                                Text="{Binding Placeholder, RelativeSource={RelativeSource TemplatedParent}}"
                                TextWrapping="{Binding TextWrapping, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToInverseVisibilityConverter}}" />
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="placeholderText" Property="Foreground" Value="{Binding PlaceholderForegroundFocused, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="CornflowerBlue" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Components:SymbolButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Components:SymbolButton}">
                    <Border x:Name="Enveloper" Background="{TemplateBinding Background}">
                        <Image
                            x:Name="AweImg"
                            Width="{TemplateBinding IconSize}"
                            Height="{TemplateBinding IconSize}"
                            RenderTransformOrigin="0.5,0.5"
                            Source="{TemplateBinding Image}"
                            Stretch="Uniform">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Image.RenderTransform>
                        </Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseDown" SourceName="Enveloper">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="AweImg"
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                        To="0.9"
                                        Duration="0:0:0.1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="AweImg"
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                        To="0.9"
                                        Duration="0:0:0.1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:0.1"
                                        Storyboard.TargetName="AweImg"
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1"
                                        Duration="0:0:0.1" />
                                    <DoubleAnimation
                                        BeginTime="0:0:0.1"
                                        Storyboard.TargetName="AweImg"
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1"
                                        Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
